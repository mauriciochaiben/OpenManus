#!/bin/bash

echo "üîç Validando estrutura de componentes compartilhados..."
echo "=================================================="

# Verificar estrutura de diret√≥rios compartilhados
echo ""
echo "üìÅ Estrutura de diret√≥rios compartilhados:"
echo "--------------------------------------------"

BASE_DIR="frontend/src/shared"

for dir in "components" "hooks" "utils" "types"; do
    if [ -d "$BASE_DIR/$dir" ]; then
        echo "‚úÖ $BASE_DIR/$dir/ - existe"

        # Listar arquivos em cada diret√≥rio
        files=$(find "$BASE_DIR/$dir" -name "*.ts" -o -name "*.tsx" | wc -l)
        echo "   üìÑ $files arquivo(s) encontrado(s)"

        if [ "$dir" = "utils" ]; then
            echo "   üîß Utils dispon√≠veis:"
            for file in "$BASE_DIR/$dir"/*.ts; do
                if [ -f "$file" ]; then
                    basename "$file" .ts | sed 's/^/      - /'
                fi
            done
        fi

        if [ "$dir" = "components" ]; then
            echo "   üß© Componentes dispon√≠veis:"
            for file in "$BASE_DIR/$dir"/*.tsx; do
                if [ -f "$file" ]; then
                    basename "$file" .tsx | sed 's/^/      - /'
                fi
            done
        fi
    else
        echo "‚ùå $BASE_DIR/$dir/ - n√£o existe"
    fi
done

echo ""
echo "üîó Verifica√ß√£o de imports e exports:"
echo "-------------------------------------"

# Verificar se os arquivos index existem
for index_file in "$BASE_DIR/index.ts" "$BASE_DIR/utils/index.ts" "$BASE_DIR/components/index.ts"; do
    if [ -f "$index_file" ]; then
        echo "‚úÖ $(basename $index_file) - existe"
    else
        echo "‚ùå $(basename $index_file) - n√£o existe"
    fi
done

echo ""
echo "üéØ Verifica√ß√£o de migra√ß√£o de componentes:"
echo "------------------------------------------"

# Verificar SourceSelector
echo "üìã SourceSelector:"
if [ -f "$BASE_DIR/components/SourceSelector.tsx" ]; then
    echo "   ‚úÖ Movido para shared/components/"

    # Verificar se ainda existe na localiza√ß√£o original
    if [ -f "frontend/src/features/knowledge/components/SourceSelector.tsx" ]; then
        echo "   ‚ö†Ô∏è  Ainda existe na localiza√ß√£o original (deveria ser removido)"
    else
        echo "   ‚úÖ Removido da localiza√ß√£o original"
    fi
else
    echo "   ‚ùå N√£o encontrado em shared/components/"
fi

echo ""
echo "üß™ Verifica√ß√£o de utils migrados:"
echo "-----------------------------------"

# Verificar utils criados
utils=("clipboard" "formatters" "validation")
for util in "${utils[@]}"; do
    if [ -f "$BASE_DIR/utils/$util.ts" ]; then
        echo "‚úÖ $util.ts - criado"

        # Contar fun√ß√µes exportadas
        exports=$(grep -c "^export " "$BASE_DIR/utils/$util.ts" 2>/dev/null || echo "0")
        echo "   üì§ $exports fun√ß√£o(√µes) exportada(s)"
    else
        echo "‚ùå $util.ts - n√£o encontrado"
    fi
done

echo ""
echo "üìä Resumo da migra√ß√£o:"
echo "----------------------"

total_utils=$(find "$BASE_DIR/utils" -name "*.ts" ! -name "index.ts" | wc -l)
total_components=$(find "$BASE_DIR/components" -name "*.tsx" | wc -l)

echo "üîß Utils compartilhados: $total_utils"
echo "üß© Componentes compartilhados: $total_components"

if [ $total_utils -ge 3 ] && [ $total_components -ge 1 ]; then
    echo ""
    echo "üéâ Migra√ß√£o conclu√≠da com sucesso!"
    echo "   - Utils centralizados e prontos para uso"
    echo "   - Componentes compartilhados organizados"
    echo "   - Estrutura padronizada implementada"
else
    echo ""
    echo "‚ö†Ô∏è  Migra√ß√£o incompleta. Verifique os arquivos em falta."
fi

echo ""
echo "‚ú® Pr√≥ximos passos recomendados:"
echo "1. Executar testes para validar a migra√ß√£o"
echo "2. Atualizar imports nas features conforme necess√°rio"
echo "3. Adicionar testes unit√°rios para utils compartilhados"
echo "4. Documentar utils compartilhados com exemplos"
